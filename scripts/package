#!/bin/bash
set -e

cd $(dirname $0)
source version
source package-env

cd $(dirname $0)/../package


$(dirname $0)/k3s-images.sh

cp $(dirname $0)/../bin/rancher $(dirname $0)/../bin/agent $(dirname $0)/../bin/data.json $(dirname $0)/../bin/k3s-airgap-images.tar .

# Make sure the used data.json is a release artifact
cp $(dirname $0)/../bin/data.json $(dirname $0)/../bin/rancher-data.json

if [ ${ARCH} == arm64 ]; then
    ETCD_UNSUPPORTED_ARCH=arm64
fi
if [ ${ARCH} == s390x ]; then
    ETCD_UNSUPPORTED_ARCH=s390x
fi

docker build \
    --build-arg VERSION=${TAG} \
    --build-arg ETCD_UNSUPPORTED_ARCH=${ETCD_UNSUPPORTED_ARCH} \
    --build-arg ARCH=${ARCH} \
    --build-arg IMAGE_REPO=${REPO} \
    --build-arg SYSTEM_CHART_DEFAULT_BRANCH=${SYSTEM_CHART_DEFAULT_BRANCH} \
    --build-arg CHART_DEFAULT_BRANCH=${CHART_DEFAULT_BRANCH} \
    --build-arg CATTLE_RANCHER_WEBHOOK_VERSION="${CATTLE_RANCHER_WEBHOOK_VERSION}" \
    --build-arg CATTLE_CSP_ADAPTER_MIN_VERSION="${CATTLE_CSP_ADAPTER_MIN_VERSION}" \
    --build-arg CATTLE_FLEET_VERSION="${CATTLE_FLEET_VERSION}" \
    -t ${IMAGE} .

docker build --build-arg VERSION=${TAG} --build-arg ARCH=${ARCH} --build-arg RANCHER_TAG=${TAG} --build-arg RANCHER_REPO=${REPO} -t ${AGENT_IMAGE} -f Dockerfile.agent .

mkdir -p $(dirname $0)/../dist
echo ${IMAGE} > $(dirname $0)/../dist/images
echo ${AGENT_IMAGE} >> $(dirname $0)/../dist/images
echo Built ${IMAGE} #${AGENT_IMAGE}
echo

cd $(dirname $0)/../bin

if [ ! -d build/system-charts ]; then
    mkdir -p build
    git clone --depth=1 --no-tags --branch $SYSTEM_CHART_DEFAULT_BRANCH https://github.com/rancher/system-charts $SYSTEM_CHART_REPO_DIR
fi

if [ ! -d $CHART_REPO_DIR ]; then
    git clone --branch $CHART_DEFAULT_BRANCH https://github.com/rancher/charts $CHART_REPO_DIR
fi

if [ ${ARCH} == amd64 ]; then
    # Move this out of ARCH check for local dev on non-amd64 hardware.
    TAG=$TAG REPO=${REPO} go run $(dirname $0)/../pkg/image/export/main.go $SYSTEM_CHART_REPO_DIR $CHART_REPO_DIR $IMAGE $AGENT_IMAGE $SYSTEM_AGENT_UPGRADE_IMAGE $WINS_AGENT_UPGRADE_IMAGE ${SYSTEM_AGENT_INSTALLER_RKE2_IMAGES[@]} ${SYSTEM_AGENT_INSTALLER_K3S_IMAGES[@]}
fi

# Create components file used for pre-release notes
$(dirname $0)/../create-components-file.sh
