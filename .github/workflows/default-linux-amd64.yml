name: default-linux-amd64
on: [pull_request]
env:
  ARCH: amd64
  CATTLE_HELM_VERSION: v2.16.8-rancher2
  CATTLE_MACHINE_VERSION: v0.15.0-rancher109
  CATTLE_K3S_VERSION: v1.27.10+k3s2
  HELM_UNITTEST_VERSION: 0.3.2
  HELM_VERSION: v3.12.3
  KUSTOMIZE_VERSION: v5.0.1
  K3D_VERSION: v5.4.6
  CATTLE_KDM_BRANCH: dev-v2.7
  HELM_URL_V2: https://github.com/rancher/helm/releases/downloadv/2.16.8-rancher2/rancher-helm
  HELM_URL_V3: https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
  TILLER_URL: https://github.com/rancher/helm/releases/download/2.16.8-rancher2/rancher-tiller
  KUSTOMIZE_URL: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v5.0.1/kustomize_v5.0.1_linux_amd64.tar.gz
  GIT_TAG: ${{ github.ref_name }}
  COMMIT: ${{ github.sha }}
  BRANCH: ${{ github.ref }}
  REPOSITORY_OWNER: ${{ github.repository_owner }}
jobs:
  # validate:
  #   runs-on: ubuntu-latest
  #   container: registry.suse.com/bci/golang:1.20
  #   steps:
  #     - name: Install Dependencies
  #       run: |
  #         zypper -n install curl unzip tar vim less file xz gzip sed gawk
  #         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.52.0; \
  #         zypper -n install python311-pip python311-base python311 python311-devel python311-tox libffi-devel libopenssl-devel
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Validate
  #       run: ./scripts/validate
  build-server:
    # needs: [validate]
    runs-on: ubuntu-latest
    # container: registry.suse.com/bci/golang:1.20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set Up RKE_VERSION env
        run: echo "RKE_VERSION=$(grep -m1 'github.com/rancher/rke' go.mod | awk '{print $2}')" >> "$GITHUB_ENV"
      - name: Build Server
        uses: docker/build-push-action@v5
        with:
          push: false
          build-args: |
            "VERSION=${{ env.GIT_TAG }}"
            "COMMIT=${{ env.COMMIT }}"
            "RKE_VERSION=${{ env.RKE_VERSION }}"
          tags: ${{ env.REPOSITORY_OWNER }}/rancher:${{ env.GIT_TAG }}
          context: ./package
          file: Dockerfile
  # test:
  #   runs-on: ubuntu-latest
  #   container: registry.suse.com/bci/golang:1.20
  #   steps:
  #     - name: Install Dependencies
  #       run: |
  #         zypper -n install curl unzip tar vim less file xz gzip sed gawk jq
  #         curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.52.0; \
  #         zypper -n install python311-pip python311-base python311 python311-devel python311-tox libffi-devel libopenssl-devel
  #         curl -sLf ${HELM_URL_V2} -o /usr/bin/rancher-helm && \
  #         curl -sLf ${TILLER_URL} -o /usr/bin/rancher-tiller && \
  #         chmod +x /usr/bin/rancher-helm /usr/bin/rancher-tiller && \
  #         ln -s /usr/bin/rancher-helm /usr/bin/helm && \
  #         ln -s /usr/bin/rancher-tiller /usr/bin/tiller && \
  #         helm init -c --stable-repo-url https://charts.helm.sh/stable/

  #         mkdir /usr/tmp && \
  #         curl ${HELM_URL_V3} | tar xvzf - --strip-components=1 -C /usr/tmp/ && \
  #         mv /usr/tmp/helm /usr/bin/helm_v3 && \

  #         curl -sLf ${KUSTOMIZE_URL} | tar -xzf - -C /usr/bin
  #         chmod +x /usr/bin/kustomize

  #         helm_v3 plugin install https://github.com/helm-unittest/helm-unittest.git --version ${HELM_UNITTEST_VERSION};
  #         git config --global --add safe.directory /__w/rancher/rancher
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: test
  #       run: ./scripts/test
