name: default-linux-amd64
on: [pull_request]
jobs:
  validate:
    runs-on: ubuntu-latest
    container: registry.suse.com/bci/golang:1.20
    env:
      ARCH: amd64
    steps:
      - name: Install Dependencies
        run: |
          zypper -n install curl unzip tar vim less file xz gzip sed gawk
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.52.0; \
          zypper -n install python311-pip python311-base python311 python311-devel python311-tox libffi-devel libopenssl-devel
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Validate
        run: ./scripts/validate
  build:
    needs: [validate]
    runs-on: ubuntu-latest
    container: registry.suse.com/bci/golang:1.20
    env:
      ARCH: amd64
    steps:
      - name: Install Dependencies
        run: |
          zypper -n install gcc binutils glibc-devel-static ca-certificates git-core wget curl unzip tar vim less file xz gzip sed gawk iproute2 iptables jq
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Rancher
        run: ./scripts/build-server
      - name: Build Rancher Agent
        run: ./scripts/build-agent
      - name: Describe files
        run: ls -R
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.run_id }}-${{ github.sha }}
          path: ./bin
          retention-days: 1
  # package:
  #   runs-on: ubuntu-latest
  #   container: registry.suse.com/bci/golang:1.20
  #   env:
  #     CATTLE_HELM_VERSION: v2.16.8-rancher2
  #     CATTLE_MACHINE_VERSION: v0.15.0-rancher109
  #     CATTLE_K3S_VERSION: v1.27.10+k3s2
  #     ARCH: amd64
  #     HELM_VERSION: v3.12.3
  #     KUSTOMIZE_VERSION: v5.0.1
  #     HELM_UNITTEST_VERSION: 0.3.2
  #     K3D_VERSION: v5.4.6
  #     CATTLE_KDM_BRANCH: dev-v2.7
  #     HELM_URL_V2:
  #   steps:
  #     - name: Install Dependencies
  #       run: |
  #         zypper -n install gcc binutils glibc-devel-static ca-certificates git-core wget curl unzip tar vim less file xz gzip sed gawk iproute2 iptables jq skopeo

  #         zypper install -y -f docker && rpm -e --nodeps --noscripts containerd

  #         curl -sLf
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: download build
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-${{ github.run_id }}-${{ github.sha }}
  #         path: ./bin
  #     - name: Package
  #       run: ./scripts/package
